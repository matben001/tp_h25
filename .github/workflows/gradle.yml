name: CI

on:
  push:
    branches:
      - master
      - 'branch-*'
  pull_request:
  workflow_dispatch:

env:
  CIRRUS_SHELL: bash
  CIRRUS_CLONE_DEPTH: 0
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
  FETCH_DEPTH: --depth=1
  BUILD_NUMBER: 1
  

jobs:

  build:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:7.5.1-jdk17
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Execute Permission for Build Script
        run: chmod +x .github/workflows/git-build.sh
      - name: Build Project
        run: .github/workflows/git-build.sh
      - name: Store Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: '**/build/libs/*.jar'
  junit:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:7.5.1-jdk17
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Execute Permission for Build Script
        run: chmod +x .github/workflows/git-junit.sh
      - name: Run JUnit Tests
        run: .github/workflows/git-junit.sh
      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: '**/build/test-results/**/*.xml'
  coverage:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:7.5.1-jdk17
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Execute Permission for Coverage Script
        run: chmod +x .github/workflows/git-coverage.sh
      - name: Run Coverage Tests
        run: .github/workflows/git-coverage.sh
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: '**/build/reports/**/*'
  deploy-sonarqube:
    runs-on: ubuntu-latest
    needs: [build, junit, coverage]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: sonar-application/build/distributions/
      - name: List Files Before Extraction
        run: ls -R sonar-application/build/distributions/

      - name: Unzip SonarQube Distribution
        run: unzip sonar-application/build/distributions/*.zip -d sonar-application/build/distributions/

      - name: Start SonarQube Server (Linux)
        run: |
          chmod +x sonar-application/build/distributions/bin/linux-x86-64/sonar.sh
          sonar-application/build/distributions/bin/linux-x86-64/sonar.sh start
        if: runner.os == 'Linux'

      - name: Start SonarQube Server (MacOS)
        run: |
          chmod +x sonar-application/build/distributions/bin/macosx-universal-64/sonar.sh
          sonar-application/build/distributions/bin/macosx-universal-64/sonar.sh start
        if: runner.os == 'macOS'

      - name: Start SonarQube Server (Windows)
        run: sonar-application/build/distributions/bin/windows-x86-64/StartSonar.bat
        if: runner.os == 'Windows'
