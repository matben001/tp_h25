name: CI

on:
  push:
    branches:
      - master
      - 'branch-*'
  pull_request:
  workflow_dispatch:

env:
  CIRRUS_SHELL: bash
  CIRRUS_CLONE_DEPTH: 0
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
  FETCH_DEPTH: --depth=1

jobs:
  cache_dependencies:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
      - name: Install Dependencies
        run: .cirrus/cirrus-cache-dependencies.sh
      - name: Cleanup Gradle Cache
        run: |
          rm -rf ~/.gradle/caches/7.*/
          rm -rf ~/.gradle/daemon/
          rm -rf ~/.gradle/caches/transforms-*
          rm -rf ~/.gradle/caches/journal-*
          find ~/.gradle/caches/ -name "*.lock" -type f -delete

  build:
    needs: cache_dependencies
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
      - name: Build Project
        run: .cirrus/cirrus-build.sh
      - name: Store Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: '**/build/libs/*.jar'

  junit:
    needs: cache_dependencies
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
      - name: Run JUnit Tests
        run: .cirrus/cirrus-junit.sh
      - name: Upload JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: '**/build/test-results/**/*.xml'

  sonar_analysis:
    needs: [build, junit]
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/gradle:latest
    env:
      SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle*.properties') }}
      - name: Run SonarQube Analysis
        run: .cirrus/cirrus-sq-analysis.sh
